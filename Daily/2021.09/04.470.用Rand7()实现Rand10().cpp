// 1.已知 rand_N() 可以等概率的生成[1, N]范围的随机数
// 那么：
// (rand_X() - 1) * Y + rand_Y() ==> 可以等概率的生成[1, X * Y]范围的随机数
// 即实现了 rand_XY()

// 2. 事实上，只要rand_N()中N是2的倍数，就都可以用来实现rand2()，反之，若N不是2的倍数，则产生的结果不是等概率的

// -->有了前面的分析，要实现rand10()，就需要先实现rand_N()，并且保证N大于10且是10的倍数。这样再通过rand_N() % 10 + 1 就可以得到[1,10]范围的随机数了。

// 而实现rand_N()，我们可以通过part 1中所讲的方法对rand7()进行改造，如下：


// (rand7()-1) × 7 + rand7()  ==> rand49()
// 但是这样实现的N不是10的倍数啊！这该怎么处理？这里就涉及到了“拒绝采样”的知识了，也就是说，如果某个采样结果不在要求的范围内，则丢弃它

class Solution {
public:
    int rand10() {
        while(true){
            int num = (rand7()-1)*7 + rand7();  // 生成[1-49]的数
            // 拒绝采样
            if(num <= 40) return num%10+1;
        }
    }
};


